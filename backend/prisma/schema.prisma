// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Prisma schema for File Organizer System

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folders   Folder[]
  files     File[]
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  parentId  String?  
  parent    Folder?  @relation("FolderToFolder", fields: [parentId], references: [id])
  children  Folder[] @relation("FolderToFolder")
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  files     File[]
}

model File {
  id           String   @id @default(uuid())
  name         String
  originalName String
  size         Int
  mimeType     String
  path         String
  folder       Folder?  @relation(fields: [folderId], references: [id])
  folderId     String?
  content      String?
  description  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  tags         FileTag[]
}

model Tag {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  files     FileTag[]
}

model FileTag {
  file   File @relation(fields: [fileId], references: [id])
  fileId String
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  String

  @@id([fileId, tagId])
}
